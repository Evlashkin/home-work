import shop.sql
#/* my request SQL */

/* Выведите имена и email тех пользователей, которые:
- заказывали продукты, название которых начинается с «Гватемала»;
- имеют почтовый домен верхнего уровня, отличный от ru и su, и при этом имеют упакованный заказ;
- заказывали товары из категории «Кофе без кофеина». */

SELECT
	`user`.name,
    `user`.email
FROM `user`
JOIN `order` ON `order`.`user_id` = user.id
JOIN `order2good` ON `order2good`.order_id = `order`.id
JOIN `good` ON `good`.id = `order2good`.good_id
WHERE `good`.name LIKE 'Гватемала%'
UNION
SELECT
	`user`.name,
    `user`.email
FROM `user`
JOIN `order` ON `order`.user_id = `user`.`id`
JOIN `order_status` ON `order_status`.`id` = `order`.`status_id`
WHERE (`user`.`email` NOT LIKE '%su' OR `user`.`email` NOT LIKE '%ru') AND `order_status`.`name`= 'Упакован'
UNION
SELECT
	`user`.`name`,
    `user`.`email`
FROM `user`
JOIN `order` ON `order`.`user_id` = `user`.id
JOIN `order2good` ON `order2good`.`order_id` = `order`.id
JOIN `good` ON `good`.id = `order2good`.`good_id`
JOIN `good_category` ON `good_category`.`id` = `good`.category_id
WHERE good_category.name = 'Кофе без кофеина'


________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________
/* Task 3.15 */

/* В этом задании вам необходимо выполнить несколько SQL-запросов к базе данных shop.sql:

1. Добавьте при помощи INSERT-запросов четыре новых товара в таблицу `good` с ценами выше 1000 рублей
и ненулевым количеством. Убедитесь, что товары добавлены в таблицу и стали самыми дорогими в этой таблице.

INSERT INTO `good`(`category_id`, `name`, `count`, `price`)
VALUES
(1, "Иван-чай Путятинский", 22, 1001),
(1, "Крапивный сбор Путятинский", 8, 1002),
(1, "Гвоздика-ежевика Путятинская", 12, 1003),
(1, "Прополис Путятинский", 33, 2001)


2. Обнулите количество товаров, цена которых выше 1000 рублей, используя один UPDATE-запрос. В результате выполнения
запроса количество каждого из добавленных вами четырёх товаров должно стать равным нулю.

UPDATE `good`
SET `count`=10
WHERE `price`>1000


3. Повысьте в три раза цену у всех товаров, которые дороже 1000 рублей, используя один UPDATE-запрос. В результате
выполнения запроса у добавленных вами товаров цены, которые были выше 1000 рублей, должны увеличиться в три раза.

UPDATE `good`
SET `price` = `price`*3
WHERE `price`>1000


4. Удалите добавленные вами товары, используя один DELETE-запрос и условие «дороже 1000 рублей». В результате выполнения
запроса все добавленные вами товары должны удалиться. Если вы случайно испортили изначальные данные в таблице, то
можете сначала очистить базу от таблиц и затем заново импортировать в базу исходный дамп, как описано в материале
«Удаление таблиц в phpMyAdmin».*/

DELETE
FROM `good`
WHERE `price`>1000


________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________
________________________________________________________________________________________________________________________
/* Task 4.4 */
1. Выведите родительскую категорию, количество элементов в такой категории и столбец со значением «чётное» или «нечётное»
для количества таких элементов.

SELECT
	`category_id`,
    COUNT(*),

    IF(
        COUNT(*) % 2 = 0,
        'EVEN',
        'NOT EVEN'
        ) AS `even`
FROM `good`
GROUP BY `category_id`


2. Выведите идентификатор категории, имя, количество и «статус» товаров, общая стоимость которых не менее 390 000 рублей,
двумя способами: с IF и с CASE.
Определим «статус» как величину, зависящую от самого товара:
Если товар не принадлежит к корневой категории чая, то его статус ‘NOT TEA’.
Если это чай и его более 500 штук, то статус ‘ENOUGH’.
В противном случае ‘NOT ENOUGH’.
2.1
SELECT
	gc.parent_id,
    g.name,
    g.count,
    IF(
        gc.parent_id <> 1,
        "NOT TEA",
        IF(
            gc.parent_id = 1 AND g.count > 500,
            'ENOUGH',
            'NOT ENOUGH'
            )
        ) AS 'ENOUGH'
FROM `good` g
JOIN `good_category` gc ON gc.id = g.category_id
WHERE g.count * g.price > 39000
GROUP BY gc.id


2.2
SELECT
	gc.parent_id,
    g.name,
    g.count,
    CASE
        WHEN gc.parent_id != 1 THEN 'NOT TEA'
        WHEN gc.parent_id = 1 AND g.count > 500 THEN 'ENOUGH'
        ELSE 'NOT ENOUGH'
    END stat
FROM `good` g
JOIN `good_category` gc ON gc.id = g.category_id
WHERE g.count * g.price > 39000
GROUP BY gc.id